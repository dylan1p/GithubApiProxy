swagger: "2.0"
info:
  description: "Project to get users details from github a and then create posts to these users."
  version: "1.0.0"
  title: "Github API Proxy"
  termsOfService: "http://localhost:3000/"
  contact:
    email: "dylan1p@hotmail.com"
host: "localhost:3000"

tags:
- name: "Local User"
  description: "Users local to the application"
- name: "Users"
  description: "Users on github"
- name: "Post"
  description: "Operations about posts"

schemes:
- "http"
paths:
  /local-user/register:
    post:
      tags:
      - "Local User"
      summary: "Register a user"
      description: ""
      operationId: "registerUser"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "The user to authenticate"
        required: true
        schema:
          type: "object"
          required:
          - username
          - password
          properties:
            userName:
              type: string
            firstName:
              type: string
      responses:
        201:
          description: "User registered"
          schema:
            type: "object"
            properties:
              token:
                type: string
        409:
          description: "User already exists"
        400:
          description: "Missing field"

  /local-user/authenticate:
    post:
      tags:
      - "Local User"
      summary: "Authenticating a user"
      operationId: "authenticateUser"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "The user to authenticate"
        required: true
        schema:
          type: "object"
          required:
          - username
          - password
          properties:
            userName:
              type: string
            firstName:
              type: string
      responses:
        200:
          description: "A JSON array of user names"
          schema:
            type: "object"
            properties:
              token:
                type: string
        400:
          description: "Missing field"
        401:
          description: "Login failed"
  /users:
    get:
      tags:
      - "Users"
      summary: "Listing users"
      description: "Must provide at least one search parameter"
      operationId: "getUsers"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "x-access-token"
        in: "header"
        type: "string"
      - name: "name"
        in: "query"
        description: "name"
        type: "string"
      - name: "location"
        in: "query"
        description: "location of user"
        type: "string"
      - name: "language"
        in: "query"
        description: "primary language of users repos"
        type: "string"
      - name: "page"
        in: "query"
        description: "page number"
        type: "integer"
        format: "int64"
      - name: "perPage"
        description: "number of items per page"
        in: "query"
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        400:
          description: "no query parameters sent"
  /post:
    post:
      tags:
      - 'Post'
      summary: 'Create a post'
      operationId: 'createPost'
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "x-access-token"
        in: "header"
        type: "string"
      - name: "body"
        in: "body"
        description: "The post to create"
        required: true
        schema:
          $ref: "#/definitions/Post"
      responses:
        400:
          description: "no parameters sent"
        201:
          description: "post created"
          schema:
            $ref: "#/definitions/Post"
  /post/{postId}:
    put:
      tags:
      - 'Post'
      summary: 'Update a post'
      operationId: 'updatePost'
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "x-access-token"
        in: "header"
        type: "string"
      - name: "postId"
        in: "path"
        type: "string"
        required: true
      - name: "body"
        in: "body"
        description: "The post to update"
        required: true
        schema:
          $ref: "#/definitions/Post"
      responses:
        200:
          description: "post updated"
          schema:
            $ref: "#/definitions/Post"
        404:
          description: "post not found"
    get:
      tags:
      - 'Post'
      summary: 'Get a post'
      operationId: 'getPostById'
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "x-access-token"
        in: "header"
        type: "string"
      - name: "postId"
        in: "path"
        type: "string"
        required: true
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Post"
        404:
          description: "post not found"

  /post/{postId}/deactivate:
    put:
      tags:
      - 'Post'
      summary: 'Deactivate a post'
      operationId: 'deactivatePost'
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "x-access-token"
        in: "header"
        type: "string"
      - name: "postId"
        in: "path"
        type: "string"
        required: true
      responses:
        200:
          description: "post updated"
          schema:
            $ref: "#/definitions/Post"
        404:
          description: "post not found"
  /post/list:
    get:
      tags:
      - 'Post'
      summary: 'Get a list of posts'
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "x-access-token"
        in: "header"
        type: "string"
      - name: "localUserId"
        in: "query"
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"

definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      avatar_url:
        type: "string"
      login:
        type: "string"
      score:
        type: "integer"
        format: "int64"
    xml:
      name: "User"
  Post:
    type: "object"
    properties:
      title:
        type: "string"
      body:
        type: "string"
      picture:
        type: "string"
      creator:
        type: "object"
        properties:
          username:
            type: "string"
      taggedUsers:
        type: array
        items:
          $ref: "#/definitions/User"
    xml:
      name: "Post"
